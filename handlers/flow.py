from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from handlers.states import NAV, PHONE, DONE
from utils.data import user_data
from utils.sheets import append_row_to_sheet

async def year_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text.strip()

    try:
        year = int(text)
        user_data[user_id]["year"] = year
        markup = ReplyKeyboardMarkup([["–° –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π", "–ë–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"]],
                                     one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è?", reply_markup=markup)
        return NAV
    except ValueError:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: 2017")
        return YEAR

async def nav_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_data[user_id]["nav"] = update.message.text.strip()
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=ReplyKeyboardRemove())
    return PHONE

async def phone_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_data[user_id]["phone"] = update.message.text.strip()

    info = user_data[user_id]
    row = [info.get("brand"), info.get("model"), info.get("year"), info.get("nav"), info.get("phone")]
    append_row_to_sheet(row)

    summary = (
        f"üìã –í–∞—à–∞ –∑–∞—è–≤–∫–∞:\n"
        f"–ú–∞—Ä–∫–∞: {info.get('brand')}\n"
        f"–ú–æ–¥–µ–ª—å: {info.get('model')}\n"
        f"–ì–æ–¥: {info.get('year')}\n"
        f"–ù–∞–≤–∏–≥–∞—Ü–∏—è: {info.get('nav')}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {info.get('phone')}"
    )

    await update.message.reply_text(summary)
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    return DONE