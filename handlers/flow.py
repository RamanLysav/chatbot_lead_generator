from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from data.session import user_data

async def start_calc(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    user_data[user_id] = {"step": "model"}

    models = [["EcoSport", "Fusion", "Escape"], ["Bronco Sport", "Edge", "F-150"], ["Mustang", "–î—Ä—É–≥–∞—è –º–æ–¥–µ–ª—å"]]
    markup = ReplyKeyboardMarkup(models, one_time_keyboard=True, resize_keyboard=True)

    await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è:")
    await context.bot.send_message(chat_id=user_id, text="üëá –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–î—Ä—É–≥–∞—è –º–æ–¥–µ–ª—å':", reply_markup=markup)

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip()
    session = user_data.get(user_id)

    if not session:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")
        return

    step = session.get("step")

    if step == "model":
        if text == "–î—Ä—É–≥–∞—è –º–æ–¥–µ–ª—å":
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –≤—Ä—É—á–Ω—É—é:", reply_markup=ReplyKeyboardRemove())
            return
        session["model"] = text
        session["step"] = "year"
        years = [str(y) for y in range(2025, 2014, -1)]
        keyboard = [years[i:i+3] for i in range(0, len(years), 3)] + [["–î—Ä—É–≥–æ–π –≥–æ–¥"]]
        markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text("‚úÖ –ú–æ–¥–µ–ª—å –ø—Ä–∏–Ω—è—Ç–∞.\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥:", reply_markup=markup)

    elif step == "year":
        if text == "–î—Ä—É–≥–æ–π –≥–æ–¥":
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—Ä—É—á–Ω—É—é:", reply_markup=ReplyKeyboardRemove())
            return
        if not text.isdigit() or not (2010 <= int(text) <= 2025):
            await update.message.reply_text("‚õî –í–≤–µ–¥–∏—Ç–µ